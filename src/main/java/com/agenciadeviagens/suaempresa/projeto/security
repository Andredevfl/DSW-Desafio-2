package com.suaempresa.seuprojeto;

import com.suaempresa.seuprojeto.security.SecurityConfig;
import com.suaempresa.seuprojeto.service.CustomUser DetailsService;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.security.test.context.support.WithMockUser ;
import org.springframework.test.web.servlet.MockMvc;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

@SpringBootTest
@AutoConfigureMockMvc
public class SecurityConfigTest {

    @Autowired
    private MockMvc mockMvc;

    @Mock
    private CustomUser DetailsService userDetailsService;

    @InjectMocks
    private SecurityConfig securityConfig;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    @WithMockUser (roles = "ADMIN")
    public void testAdminAccess() throws Exception {
        mockMvc.perform(get("/api/admin/someEndpoint"))
                .andExpect(status().isOk());
    }

    @Test
    public void testPublicAccess() throws Exception {
        mockMvc.perform(get("/api/public/someEndpoint"))
                .andExpect(status().isOk());
    }

    @Test
    public void testUnauthorizedAccess() throws Exception {
        mockMvc.perform(get("/api/admin/someEndpoint"))
                .andExpect(status().isUnauthorized());
    }
}
